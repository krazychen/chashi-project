<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.io.yy.merchant.mapper.CsMerchantOrderMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, merchant_id, tearoom_id, room_name, wxuser_id, wxuser_phone, openid, origin_order_id, order_name, order_date,
        order_timerage, order_start_time, order_end_time, order_timerage_clean,
        next_order_date, next_order_timerage, next_order_start_time,next_order_end_time,next_order_timerage_clean,
        order_origin_timenum, membercard_order_id, order_mb_timenum,
        order_timenum, order_unit_origin_price, order_unit_price, order_origin_price, coupon_released_id, order_cp_amount,
        order_mb_amount, order_price, out_trade_no, payment_status, payment_msg, payment_type,used_status,
        source_type, status, ttl_lock_id, keyboard_pwd_id, keyboard_pwd, rttl_lock_id, rkeyboard_pwd_id,
        rkeyboard_pwd, deleted, version, create_by, create_time, update_by, update_time, corp_code, corp_name
    </sql>

    <select id="getCsMerchantOrderById" resultType="com.io.yy.merchant.vo.CsMerchantOrderQueryVo">
        select
        <include refid="Base_Column_List"/>
        from cs_merchant_order where id = #{id}
    </select>

    <select id="getCsMerchantOrderDetailById" resultType="com.io.yy.merchant.vo.CsMerchantOrderQueryVo">
        SELECT cmo.*,cm.address,cm.contact_phonse,ct.room_logo_url,ct.room_logo_name,ct.hours_amount
        FROM cs_merchant_order cmo
        LEFT JOIN cs_tearoom ct ON cmo.tearoom_id=ct.id
        LEFT JOIN cs_merchant cm ON cmo.merchant_id=cm.id
         where cmo.id = #{id}
    </select>

    <select id="getCsMerchantOrderPageList" resultType="com.io.yy.merchant.vo.CsMerchantOrderQueryVo">
        select
        cmo.id AS id, cmo.out_trade_no,merchant_id, tearoom_id, room_name, wxuser_id, wxuser_phone, cmo.openid, origin_order_id,
        order_name, order_date, order_timerage, order_start_time, order_end_time, order_timerage_clean,
        next_order_date,next_order_timerage,next_order_start_time,next_order_end_time,next_order_timerage_clean,
        order_origin_timenum, membercard_order_id, order_mb_timenum,order_timenum, order_unit_origin_price, order_unit_price, order_origin_price, coupon_released_id, order_cp_amount,
        order_mb_amount, order_price,out_trade_no, payment_status, payment_type,used_status, source_type, cmo.status, cmo.deleted, cmo.version, cmo.create_by,
        cmo.create_time,cmo.update_by, cmo.update_time, wu.nickname AS nickname,cm.address
        from cs_merchant_order cmo
        left join wx_user wu on cmo.wxuser_id=wu.id
        LEFT JOIN cs_merchant cm ON cmo.merchant_id=cm.id
        where 1=1 and cmo.deleted = 0
        <if test="param.nameAphone !=null and param.nameAphone.trim() != '' ">
            and (cmo.wxuser_phone like concat('%', #{param.nameAphone}, '%') or wu.nickname like concat('%', #{param.nameAphone}, '%'))
        </if>
        <if test="param.merchantId !=null">
            and cmo.merchant_id = #{param.merchantId}
        </if>
        <if test="param.queryType == 2">
            and cmo.payment_status=0
        </if>
        <if test="param.queryType == 3">
            AND cmo.payment_status=2
            AND cmo.used_status =0
        </if>
        <if test="param.queryType == 4">
            AND cmo.payment_status=2
            AND cmo.used_status =1
        </if>
        <if test="param.queryType == 5">
            AND cmo.payment_status=2
            AND cmo.used_status =3
        </if>
        <if test="param.queryType == 6">
            AND cmo.payment_status=3
        </if>
        <if test="param.queryType == 7">
            AND cmo.payment_status=5
        </if>
        <if test="param.queryType == 8">
            AND cmo.payment_status=2
            AND cmo.used_status =2
        </if>
    </select>

    <update id="updateStatus">
        update cs_merchant_order set status = #{param.status}
        where deleted = 0
        <if test="param.id != null">
            and id = #{param.id}
        </if>
    </update>

    <update id="updateUsedStatus">
        update cs_merchant_order set used_status = #{param.usedStatus}
        where deleted = 0
        <if test="param.id != null">
            and id = #{param.id}
        </if>
        <if test="param.usedStatus != null and param.usedStatus == '1'">
            and user_status = 0
        </if>
    </update>

    <select id="getTimeRangeForWx" resultType="java.lang.String">
        select cmo.order_timerage AS order_timerage
        from cs_merchant_order cmo
        where 1=1
        and date(cmo.order_date) = date(#{param.orderDate})
        and cmo.`payment_status` = 2
        and cmo.tearoom_id = #{param.tearoomId}
        UNION
        select cmo.next_order_timerage AS order_timerage
        from cs_merchant_order cmo
        where 1=1
          and date(cmo.next_order_date) = date(#{param.orderDate})
          and cmo.`payment_status` = 2
          and cmo.tearoom_id = #{param.tearoomId}
    </select>

    <select id="getOrderByCurrent" resultType="java.lang.Integer">
        SELECT id FROM cs_merchant_order cmo
        WHERE
        (
        (cmo.order_start_time <![CDATA[ <= ]]> #{param.currentTime}
        AND
        cmo.order_end_time <![CDATA[ >= ]]> #{param.currentTime}
        OR
        (cmo.next_order_start_time <![CDATA[ <= ]]> #{param.currentTime}
        AND
        cmo.next_order_end_time <![CDATA[ >= ]]> #{param.currentTime}
        AND tearoom_id = #{param.tearoomId}
    </select>

    <update id="updatePaymentStatus">
        update cs_merchant_order set payment_status = #{param.paymentStatus}
        <if test="param.paymentMsg != null and param.paymentMsg.trim() != ''">
            and payment_msg = #{param.paymentMsg}
        </if>
        where deleted = 0
        <if test="param.id != null">
            and id = #{param.id}
        </if>
        <if test="param.outTradeNo != null">
            and out_trade_no = #{param.outTradeNo}
        </if>
        and payment_status != #{param.paymentStatus}
    </update>

    <update id="updateLockKey">
        update cs_merchant_order
        set keyboard_pwd_id = #{param.keyboardPwdId}, keyboard_pwd = #{param.keyboardPwd},
            rkeyboard_pwd_id = #{param.rkeyboardPwdId}, rkeyboard_pwd = #{param.rkeyboardPwdId}
        where deleted = 0
        and id = #{param.id}
    </update>
</mapper>
